// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// XMAP_suff
Rcpp::List XMAP_suff(const arma::cube& XX, const arma::mat& Xy, const arma::colvec yty, const arma::colvec& n, int K, arma::cube Sigma, arma::mat Omega, arma::colvec& Sig_E, const arma::colvec& prior_weights, int maxIter, double tol, bool estimate_prior_variance, bool estimate_residual_variance, bool estimate_background_variance);
RcppExport SEXP _XMAP_XMAP_suff(SEXP XXSEXP, SEXP XySEXP, SEXP ytySEXP, SEXP nSEXP, SEXP KSEXP, SEXP SigmaSEXP, SEXP OmegaSEXP, SEXP Sig_ESEXP, SEXP prior_weightsSEXP, SEXP maxIterSEXP, SEXP tolSEXP, SEXP estimate_prior_varianceSEXP, SEXP estimate_residual_varianceSEXP, SEXP estimate_background_varianceSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::cube& >::type XX(XXSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Xy(XySEXP);
    Rcpp::traits::input_parameter< const arma::colvec >::type yty(ytySEXP);
    Rcpp::traits::input_parameter< const arma::colvec& >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type Sigma(SigmaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Omega(OmegaSEXP);
    Rcpp::traits::input_parameter< arma::colvec& >::type Sig_E(Sig_ESEXP);
    Rcpp::traits::input_parameter< const arma::colvec& >::type prior_weights(prior_weightsSEXP);
    Rcpp::traits::input_parameter< int >::type maxIter(maxIterSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< bool >::type estimate_prior_variance(estimate_prior_varianceSEXP);
    Rcpp::traits::input_parameter< bool >::type estimate_residual_variance(estimate_residual_varianceSEXP);
    Rcpp::traits::input_parameter< bool >::type estimate_background_variance(estimate_background_varianceSEXP);
    rcpp_result_gen = Rcpp::wrap(XMAP_suff(XX, Xy, yty, n, K, Sigma, Omega, Sig_E, prior_weights, maxIter, tol, estimate_prior_variance, estimate_residual_variance, estimate_background_variance));
    return rcpp_result_gen;
END_RCPP
}
// test
Rcpp::List test(const arma::cube& XX);
RcppExport SEXP _XMAP_test(SEXP XXSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::cube& >::type XX(XXSEXP);
    rcpp_result_gen = Rcpp::wrap(test(XX));
    return rcpp_result_gen;
END_RCPP
}
// rcpparma_hello_world
arma::mat rcpparma_hello_world();
RcppExport SEXP _XMAP_rcpparma_hello_world() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(rcpparma_hello_world());
    return rcpp_result_gen;
END_RCPP
}
// rcpparma_outerproduct
arma::mat rcpparma_outerproduct(const arma::colvec& x);
RcppExport SEXP _XMAP_rcpparma_outerproduct(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::colvec& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpparma_outerproduct(x));
    return rcpp_result_gen;
END_RCPP
}
// rcpparma_innerproduct
double rcpparma_innerproduct(const arma::colvec& x);
RcppExport SEXP _XMAP_rcpparma_innerproduct(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::colvec& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpparma_innerproduct(x));
    return rcpp_result_gen;
END_RCPP
}
// rcpparma_bothproducts
Rcpp::List rcpparma_bothproducts(const arma::colvec& x);
RcppExport SEXP _XMAP_rcpparma_bothproducts(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::colvec& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpparma_bothproducts(x));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_XMAP_XMAP_suff", (DL_FUNC) &_XMAP_XMAP_suff, 14},
    {"_XMAP_test", (DL_FUNC) &_XMAP_test, 1},
    {"_XMAP_rcpparma_hello_world", (DL_FUNC) &_XMAP_rcpparma_hello_world, 0},
    {"_XMAP_rcpparma_outerproduct", (DL_FUNC) &_XMAP_rcpparma_outerproduct, 1},
    {"_XMAP_rcpparma_innerproduct", (DL_FUNC) &_XMAP_rcpparma_innerproduct, 1},
    {"_XMAP_rcpparma_bothproducts", (DL_FUNC) &_XMAP_rcpparma_bothproducts, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_XMAP(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
